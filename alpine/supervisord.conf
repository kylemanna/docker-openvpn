[unix_http_server]
file=/run/supervisord.sock   ; (the path to the socket file)

[supervisord]
logfile=/dev/stderr ; (main log file;default $CWD/supervisord.log)
logfile_maxbytes=0            ; (max main logfile bytes b4 rotation;default 50MB)
logfile_backups=0 ; (num of main logfile rotation backups;default 10)

loglevel=warn                ; (log level;default info; others: debug,warn,trace)
pidfile=/run/supervisord.pid ; (supervisord pidfile;default supervisord.pid)
nodaemon=true              ; (start in foreground if true;default false)

; the below section must remain in the config file for RPC
; (supervisorctl/web interface) to work, additional interfaces may be
; added by defining them in separate rpcinterface: sections
[rpcinterface:supervisor]
supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface

[supervisorctl]
serverurl=unix:///run/supervisord.sock ; use a unix:// URL  for a unix socket

[program:openvpn-udp]
command=/usr/sbin/openvpn %(ENV_OVPNUDPARGS)s     ; the program (relative uses PATH, can take args)
autorestart=true                                 ; whether/when to restart (default: unexpected)
startretries=5                                   ; max # of serial start failures (default 3)
stdout_logfile=/dev/stdout                       ; stdout log path, NONE for none; default AUTO
stderr_logfile=/dev/stderr                       ; stdout log path, NONE for none; default AUTO
catch_workers_output = Yes
stdout_events_enabled=true
stderr_events_enabled=true
stdout_logfile_maxbytes=0
stderr_logfile_maxbytes=0

[program:openvpn-tcp]
command=/usr/sbin/openvpn %(ENV_OVPNTCPARGS)s     ; the program (relative uses PATH, can take args)
autorestart=true                                 ; whether/when to restart (default: unexpected)
startretries=5                                   ; max # of serial start failures (default 3)
stdout_logfile=/dev/stdout                       ; stdout log path, NONE for none; default AUTO
stderr_logfile=/dev/stderr                       ; stdout log path, NONE for none; default AUTO
catch_workers_output = Yes
stdout_events_enabled=true
stderr_events_enabled=true
stdout_logfile_maxbytes=0
stderr_logfile_maxbytes=0
