#!/bin/bash
#

print_help()
{
	echo "$(basename \"$0\") [-Dci] passwdfile username [password]"
	echo -e "\t-D delete given user"
	echo -e "\t-c truncate file (will contain only new user"
	echo -e "\t-i read password from stdin"
	echo -e "\t-h print this help"
}

ensure_pwd()
{
	[ "$STDIN" = 1 ] && read -s PWD
	[ -z "$PWD" ] && echo "missing or empty password" >&2 && print_help >&2 && exit 1
	PWD=$(openssl passwd -6 "$PWD")
}

action="modify"
while getopts "Dcid" arg; do
  case $arg in
    D)
	action="delete"
      ;;
    c)
	action="create"
      ;;
    i)
    	STDIN=1
      ;;
    *)
	echo "invalid usage" >&2
	print_help >&2
	exit 1
      ;;
  esac
done
shift $(($OPTIND - 1))

FILE="$1"
USER="$2"
PWD="$3"

[ -z "$USER" ] && echo "missing username" >&2 && print_help >&2 && exit 1
[ -z "$FILE" ] && echo "missing filename" >&2 && print_help >&2

case "$action" in
	delete)
		[ ! -f "$FILE" ] && exit 0
		tmp=$(mktemp)
		grep -v "^$USER:" "$FILE" > "$tmp"
		cat "$tmp" > "$FILE" && rm "$tmp" && exit 0
		;;

	create)
		ensure_pwd
		echo "$USER:$PWD" > "$FILE" && exit 0
		;;

	modify)
		ensure_pwd
		tmp=$(mktemp)
		(grep -v "^$USER:" "$FILE" 2>/dev/null; echo "$USER:$PWD") > "$tmp" && cat "$tmp" > "$FILE" && rm "$tmp" && exit 0
		;;
esac

# should not reach here
exit 1

